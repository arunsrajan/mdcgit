<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.mdc</groupId>
		<artifactId>MassiveDataCruncher</artifactId>
		<version>1.1</version>
	</parent>
	<artifactId>coverage</artifactId>
	<name>coverage</name>
	<packaging>jar</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<skip.assemblyxml>true</skip.assemblyxml>
		<skipDockerBuild>true</skipDockerBuild>
		<code.coverage.project.folder>${basedir}/../</code.coverage.project.folder>
		<code.coverage.overall.data.folder>${basedir}/target/</code.coverage.overall.data.folder>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.mdc</groupId>
			<artifactId>pipeline</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.mdc</groupId>
			<artifactId>common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.mdc</groupId>
			<artifactId>taskexecutor</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.mdc</groupId>
			<artifactId>taskscheduler</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-resource</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- This is required by jacoco to make the check goal work. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-class-files</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>false</overwrite>
							<resources>
								<resource>
									<directory>../module1/target/classes</directory>
								</resource>
								<resource>
									<directory>../module2/target/classes</directory>
								</resource>
							</resources>
							<outputDirectory>${project.build.directory}/classes</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>report-aggregate</id>
						<phase>verify</phase>
						<goals>
							<goal>report-aggregate</goal>
						</goals>
					</execution>

					<execution>
						<id>merge-results</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${code.coverage.project.folder}</directory>
									<includes>
										<include>**/target/jacoco.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${code.coverage.overall.data.folder}/aggregate.exec</destFile>
						</configuration>
					</execution>

					<execution>
						<id>check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<fileSet>
								<directory>${code.coverage.project.folder}/target/classes</directory>
							</fileSet>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>100%</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
							<dataFile>${code.coverage.overall.data.folder}/aggregate.exec</dataFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>